// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: cmd/domain/proto/s3video.proto

package s3video

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VideoUpoadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Size int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Id   int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *VideoUpoadRequest) Reset() {
	*x = VideoUpoadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_domain_proto_s3video_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoUpoadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoUpoadRequest) ProtoMessage() {}

func (x *VideoUpoadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_domain_proto_s3video_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoUpoadRequest.ProtoReflect.Descriptor instead.
func (*VideoUpoadRequest) Descriptor() ([]byte, []int) {
	return file_cmd_domain_proto_s3video_proto_rawDescGZIP(), []int{0}
}

func (x *VideoUpoadRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *VideoUpoadRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *VideoUpoadRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type VideoUploadReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Newname string `protobuf:"bytes,1,opt,name=newname,proto3" json:"newname,omitempty"`
}

func (x *VideoUploadReplay) Reset() {
	*x = VideoUploadReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_domain_proto_s3video_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoUploadReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoUploadReplay) ProtoMessage() {}

func (x *VideoUploadReplay) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_domain_proto_s3video_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoUploadReplay.ProtoReflect.Descriptor instead.
func (*VideoUploadReplay) Descriptor() ([]byte, []int) {
	return file_cmd_domain_proto_s3video_proto_rawDescGZIP(), []int{1}
}

func (x *VideoUploadReplay) GetNewname() string {
	if x != nil {
		return x.Newname
	}
	return ""
}

type VideoDeteilUpoadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoUuid string   `protobuf:"bytes,1,opt,name=video_uuid,json=videoUuid,proto3" json:"video_uuid,omitempty"`
	Title     string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Explain   string   `protobuf:"bytes,3,opt,name=explain,proto3" json:"explain,omitempty"`
	Tags      []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Category  string   `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Extension string   `protobuf:"bytes,6,opt,name=extension,proto3" json:"extension,omitempty"`
}

func (x *VideoDeteilUpoadRequest) Reset() {
	*x = VideoDeteilUpoadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_domain_proto_s3video_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoDeteilUpoadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoDeteilUpoadRequest) ProtoMessage() {}

func (x *VideoDeteilUpoadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_domain_proto_s3video_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoDeteilUpoadRequest.ProtoReflect.Descriptor instead.
func (*VideoDeteilUpoadRequest) Descriptor() ([]byte, []int) {
	return file_cmd_domain_proto_s3video_proto_rawDescGZIP(), []int{2}
}

func (x *VideoDeteilUpoadRequest) GetVideoUuid() string {
	if x != nil {
		return x.VideoUuid
	}
	return ""
}

func (x *VideoDeteilUpoadRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoDeteilUpoadRequest) GetExplain() string {
	if x != nil {
		return x.Explain
	}
	return ""
}

func (x *VideoDeteilUpoadRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *VideoDeteilUpoadRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *VideoDeteilUpoadRequest) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

type VideoDeteilUpoadReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *VideoDeteilUpoadReplay) Reset() {
	*x = VideoDeteilUpoadReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_domain_proto_s3video_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoDeteilUpoadReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoDeteilUpoadReplay) ProtoMessage() {}

func (x *VideoDeteilUpoadReplay) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_domain_proto_s3video_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoDeteilUpoadReplay.ProtoReflect.Descriptor instead.
func (*VideoDeteilUpoadReplay) Descriptor() ([]byte, []int) {
	return file_cmd_domain_proto_s3video_proto_rawDescGZIP(), []int{3}
}

func (x *VideoDeteilUpoadReplay) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type VideoDownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Startbytes int64  `protobuf:"varint,2,opt,name=startbytes,proto3" json:"startbytes,omitempty"`
	Endbytes   int64  `protobuf:"varint,3,opt,name=endbytes,proto3" json:"endbytes,omitempty"`
}

func (x *VideoDownloadRequest) Reset() {
	*x = VideoDownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_domain_proto_s3video_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoDownloadRequest) ProtoMessage() {}

func (x *VideoDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_domain_proto_s3video_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoDownloadRequest.ProtoReflect.Descriptor instead.
func (*VideoDownloadRequest) Descriptor() ([]byte, []int) {
	return file_cmd_domain_proto_s3video_proto_rawDescGZIP(), []int{4}
}

func (x *VideoDownloadRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VideoDownloadRequest) GetStartbytes() int64 {
	if x != nil {
		return x.Startbytes
	}
	return 0
}

func (x *VideoDownloadRequest) GetEndbytes() int64 {
	if x != nil {
		return x.Endbytes
	}
	return 0
}

type VideoDownloadReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *VideoDownloadReplay) Reset() {
	*x = VideoDownloadReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_domain_proto_s3video_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoDownloadReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoDownloadReplay) ProtoMessage() {}

func (x *VideoDownloadReplay) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_domain_proto_s3video_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoDownloadReplay.ProtoReflect.Descriptor instead.
func (*VideoDownloadReplay) Descriptor() ([]byte, []int) {
	return file_cmd_domain_proto_s3video_proto_rawDescGZIP(), []int{5}
}

func (x *VideoDownloadReplay) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_cmd_domain_proto_s3video_proto protoreflect.FileDescriptor

var file_cmd_domain_proto_s3video_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x63, 0x6d, 0x64, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x73, 0x33, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x73, 0x33, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x22, 0x4b, 0x0a, 0x11, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x70, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x11, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x65, 0x77, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65,
	0x77, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x17, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44,
	0x65, 0x74, 0x65, 0x69, 0x6c, 0x55, 0x70, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2c,
	0x0a, 0x16, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x74, 0x65, 0x69, 0x6c, 0x55, 0x70, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x66, 0x0a, 0x14,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x22, 0x29, 0x0a, 0x13, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32,
	0x87, 0x02, 0x0a, 0x10, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x0b, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x1a, 0x2e, 0x73, 0x33, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x55, 0x70, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x73, 0x33, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12,
	0x58, 0x0a, 0x11, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x74, 0x65, 0x69, 0x6c, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x20, 0x2e, 0x73, 0x33, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x74, 0x65, 0x69, 0x6c, 0x55, 0x70, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x33, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x74, 0x65, 0x69, 0x6c, 0x55, 0x70, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1d, 0x2e, 0x73, 0x33, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x33, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f, 0x70,
	0x62, 0x2f, 0x73, 0x33, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_cmd_domain_proto_s3video_proto_rawDescOnce sync.Once
	file_cmd_domain_proto_s3video_proto_rawDescData = file_cmd_domain_proto_s3video_proto_rawDesc
)

func file_cmd_domain_proto_s3video_proto_rawDescGZIP() []byte {
	file_cmd_domain_proto_s3video_proto_rawDescOnce.Do(func() {
		file_cmd_domain_proto_s3video_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_domain_proto_s3video_proto_rawDescData)
	})
	return file_cmd_domain_proto_s3video_proto_rawDescData
}

var file_cmd_domain_proto_s3video_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_cmd_domain_proto_s3video_proto_goTypes = []interface{}{
	(*VideoUpoadRequest)(nil),       // 0: s3video.VideoUpoadRequest
	(*VideoUploadReplay)(nil),       // 1: s3video.VideoUploadReplay
	(*VideoDeteilUpoadRequest)(nil), // 2: s3video.VideoDeteilUpoadRequest
	(*VideoDeteilUpoadReplay)(nil),  // 3: s3video.VideoDeteilUpoadReplay
	(*VideoDownloadRequest)(nil),    // 4: s3video.VideoDownloadRequest
	(*VideoDownloadReplay)(nil),     // 5: s3video.VideoDownloadReplay
}
var file_cmd_domain_proto_s3video_proto_depIdxs = []int32{
	0, // 0: s3video.Videotransporter.VideoUpload:input_type -> s3video.VideoUpoadRequest
	2, // 1: s3video.Videotransporter.VideoDeteilUpload:input_type -> s3video.VideoDeteilUpoadRequest
	4, // 2: s3video.Videotransporter.VideoDownload:input_type -> s3video.VideoDownloadRequest
	1, // 3: s3video.Videotransporter.VideoUpload:output_type -> s3video.VideoUploadReplay
	3, // 4: s3video.Videotransporter.VideoDeteilUpload:output_type -> s3video.VideoDeteilUpoadReplay
	5, // 5: s3video.Videotransporter.VideoDownload:output_type -> s3video.VideoDownloadReplay
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cmd_domain_proto_s3video_proto_init() }
func file_cmd_domain_proto_s3video_proto_init() {
	if File_cmd_domain_proto_s3video_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cmd_domain_proto_s3video_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoUpoadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_domain_proto_s3video_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoUploadReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_domain_proto_s3video_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoDeteilUpoadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_domain_proto_s3video_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoDeteilUpoadReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_domain_proto_s3video_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoDownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_domain_proto_s3video_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoDownloadReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_domain_proto_s3video_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cmd_domain_proto_s3video_proto_goTypes,
		DependencyIndexes: file_cmd_domain_proto_s3video_proto_depIdxs,
		MessageInfos:      file_cmd_domain_proto_s3video_proto_msgTypes,
	}.Build()
	File_cmd_domain_proto_s3video_proto = out.File
	file_cmd_domain_proto_s3video_proto_rawDesc = nil
	file_cmd_domain_proto_s3video_proto_goTypes = nil
	file_cmd_domain_proto_s3video_proto_depIdxs = nil
}
